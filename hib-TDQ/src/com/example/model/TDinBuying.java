/**
 * This class was automatically generated by using the new JPA Entities from Tables.
 */
package com.example.model;

import java.io.Serializable;

import javax.persistence.*;

import java.math.BigInteger;
import java.math.BigDecimal;

/**
 * TDinBuying is the persistent class for the tdinbuying database table.
 * @author Georgios Skourletopoulos
 * @version 4 August 2013
 */
@Entity
@NamedQuery(name="TDinBuying.findAll", query="SELECT t FROM TDinBuying t")
public class TDinBuying implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;

	private BigDecimal cloudCost;
	private String confidence;
	private BigInteger currentUsers;
	private BigDecimal demandRaise;
	private String justification;
	private BigInteger maxCapacity;
	private String name;
	private String qoS;
	private BigDecimal raiseCloudCost;
	private BigDecimal raiseSubscriptionPrice;
	private String realOptionsValuation;
	private String riskOfFutureTD;
	private int roi;
	private String serviceScalability;
	private BigDecimal subscriptionPrice;

	@ManyToOne
	@JoinColumn(name = "userId")
	private UserLogin userId;

	public TDinBuying() {}    //implicit constructor

	/**
	 * The explicit contructor that is used to create the TD for Leasing object.
	 * @param userId each user's ID (each user has a unique ID)
	 * @param name the estimation's name
	 * @param roi the years of Return on Investment (ROI)
	 * @param maxCapacity the maximum capacity in users
	 * @param currentUsers the current amount of users
	 * @param demandRaise the average variation in demand per year (in %)
	 * @param subscriptionPrice the price per monthly subscription (in monetary units)
	 * @param raiseSubscriptionPrice the average variation in monthly subscription price for the declared years of ROI (in %)
	 * @param cloudCost the estimated monthly cost for servicing a user in Cloud (in monetary units)
	 * @param raiseCloudCost the average variation in the monthly cost for servicing a user in Cloud for the declared years of ROI (in %)
	 * @param confidence the confidence for the estimation provided
	 * @param serviceScalability the service's scalability/market flexibility
	 * @param qoS the Quality of Service (QoS) according to non-functional requirements (i.e. availability, performance, etc.)
	 * @param riskOfFutureTD the risk of entering into a Technical Debt in the future
	 * @param realOptionsValuation the real options valuation if Technical Debt tends to incur in the future
	 * @param justification the justification for the Project Manager
	 */
	public TDinBuying(UserLogin userId, String name, int roi, BigInteger maxCapacity, BigInteger currentUsers,
			BigDecimal demandRaise, BigDecimal subscriptionPrice, BigDecimal raiseSubscriptionPrice,
			BigDecimal cloudCost, BigDecimal raiseCloudCost, String confidence, String serviceScalability,
			String qoS, String riskOfFutureTD, String realOptionsValuation, String justification) {
		this.userId = userId;
		this.name = name;
		this.roi = roi;
		this.maxCapacity = maxCapacity;
		this.currentUsers = currentUsers;
		this.demandRaise = demandRaise;
		this.subscriptionPrice = subscriptionPrice;
		this.raiseSubscriptionPrice = raiseSubscriptionPrice;
		this.cloudCost = cloudCost;
		this.raiseCloudCost = raiseCloudCost;
		this.confidence = confidence;
		this.serviceScalability = serviceScalability;
		this.qoS = qoS;
		this.riskOfFutureTD = riskOfFutureTD;
		this.realOptionsValuation = realOptionsValuation;
		this.justification = justification;
	}

	/**
	 * Getter for the estimation's ID
	 * @return this.id as Long
	 */
	public Long getId() {
		return this.id;
	}

	/**
	 * Getter for the estimation's cost in the Cloud
	 * @return this.cloudCost as a BigDecimal
	 */
	public BigDecimal getCloudCost() {
		return this.cloudCost;
	}

	/**
	 * Setter for the estimation's cost in the Cloud
	 * @param cloudCost the new cost in the Cloud to set
	 */
	public void setCloudCost(BigDecimal cloudCost) {
		this.cloudCost = cloudCost;
	}

	/**
	 * Getter for the estimation's confidence
	 * @return this.confidence as a String
	 */
	public String getConfidence() {
		return this.confidence;
	}

	/**
	 * Setter for the estimation's confidence
	 * @param confidence the new confidence
	 */
	public void setConfidence(String confidence) {
		this.confidence = confidence;
	}

	/**
	 * Getter for the estimation's current users
	 * @return this.currentUsers as a BigInteger
	 */
	public BigInteger getCurrentUsers() {
		return this.currentUsers;
	}

	/**
	 * Setter for the estimation's current users
	 * @param currentUsers the new amount of current users to set
	 */
	public void setCurrentUsers(BigInteger currentUsers) {
		this.currentUsers = currentUsers;
	}

	/**
	 * Getter for the estimation's average variation in demand
	 * @return this.demandRaise as a BigDecimal
	 */
	public BigDecimal getDemandRaise() {
		return this.demandRaise;
	}

	/**
	 * Setter for the estimation's average variation in demand
	 * @param demandRaise the new average variation in demand to set
	 */
	public void setDemandRaise(BigDecimal demandRaise) {
		this.demandRaise = demandRaise;
	}

	/**
	 * Getter for the estimation's justification
	 * @return this.justification as a String
	 */
	public String getJustification() {
		return this.justification;
	}

	/**
	 * Setter for the estimation's justification
	 * @param justification the new justification to set
	 */
	public void setJustification(String justification) {
		this.justification = justification;
	}

	/**
	 * Getter for the estimation's maximum capacity
	 * @return this.maxCapacity as a BigInteger
	 */
	public BigInteger getMaxCapacity() {
		return this.maxCapacity;
	}

	/**
	 * Setter for the estimation's maximum capacity
	 * @param maxCapacity the new maximum capacity to set
	 */
	public void setMaxCapacity(BigInteger maxCapacity) {
		this.maxCapacity = maxCapacity;
	}

	/**
	 * Getter for the estimation's name
	 * @return this.name as a String
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * Setter for the estimation's name
	 * @param name the new name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Getter for the estimation's Quality of Service
	 * @return this.qoS as a String
	 */
	public String getQoS() {
		return this.qoS;
	}

	/**
	 * Setter for the estimation's Quality of Service
	 * @param qoS the new Quality of Service to set
	 */
	public void setQoS(String qoS) {
		this.qoS = qoS;
	}

	/**
	 * Getter for the estimation's average variation in the Cloud cost
	 * @return this.raiseCloudCost as a BigDecimal
	 */
	public BigDecimal getRaiseCloudCost() {
		return this.raiseCloudCost;
	}

	/**
	 * Setter for the estimation's average variation in the Cloud cost
	 * @param raiseCloudCost the new average variation in the Cloud cost to set
	 */
	public void setRaiseCloudCost(BigDecimal raiseCloudCost) {
		this.raiseCloudCost = raiseCloudCost;
	}

	/**
	 * Getter for the estimation's average variation in the subscription price
	 * @return this.raiseSubscriptionPrice as a BigDecimal
	 */
	public BigDecimal getRaiseSubscriptionPrice() {
		return this.raiseSubscriptionPrice;
	}

	/**
	 * Setter for the estimation's average variation in the subscription price
	 * @param raiseSubscriptionPrice the new average variation in the subscription price to set
	 */
	public void setRaiseSubscriptionPrice(BigDecimal raiseSubscriptionPrice) {
		this.raiseSubscriptionPrice = raiseSubscriptionPrice;
	}

	/**
	 * Getter for the estimation's real options valuation
	 * @return this.realOptionsValuation as a String
	 */
	public String getRealOptionsValuation() {
		return this.realOptionsValuation;
	}

	/**
	 * Setter for the estimation's real options valuation
	 * @param realOptionsValuation the new real options valuation to set
	 */
	public void setRealOptionsValuation(String realOptionsValuation) {
		this.realOptionsValuation = realOptionsValuation;
	}

	/**
	 * Getter for the estimation's risk of entering into a TD in the future
	 * @return this.riskOfFutureTD as a String
	 */
	public String getRiskOfFutureTD() {
		return this.riskOfFutureTD;
	}

	/**
	 * Setter for the estimation's risk of entering into a TD in the future
	 * @param riskOfFutureTD the new risk of future TD to set
	 */
	public void setRiskOfFutureTD(String riskOfFutureTD) {
		this.riskOfFutureTD = riskOfFutureTD;
	}

	/**
	 * Getter for the estimation's years of ROI
	 * @return this.roi as an integer
	 */
	public int getRoi() {
		return this.roi;
	}

	/**
	 * Setter for the estimation's years of ROI
	 * @param roi the new years of ROI to set
	 */
	public void setRoi(int roi) {
		this.roi = roi;
	}

	/**
	 * Getter for the estimation's service scalability/market flexibility
	 * @return this.serviceScalability as a String
	 */
	public String getServiceScalability() {
		return this.serviceScalability;
	}

	/**
	 * Setter for the estimation's service scalability/market flexibility
	 * @param serviceScalability the new service's scalability/market flexibility to set
	 */
	public void setServiceScalability(String serviceScalability) {
		this.serviceScalability = serviceScalability;
	}

	/**
	 * Getter for the estimation's monthly subscription price
	 * @return this.subscriptionPrice as a BigDecimal
	 */
	public BigDecimal getSubscriptionPrice() {
		return this.subscriptionPrice;
	}

	/**
	 * Setter for the estimation's monthly subscription price
	 * @param subscriptionPrice the new monthly subscription price to set
	 */
	public void setSubscriptionPrice(BigDecimal subscriptionPrice) {
		this.subscriptionPrice = subscriptionPrice;
	}

	/**
	 * Getter for the user that owns that estimation by his ID
	 * @return this.userId as a UserLogin object
	 */
	public UserLogin getUserId() {
		return this.userId;
	}

	/**
	 * Setter for the user that owns that estimation by his ID
	 * @param userId the new user ID to set
	 */
	public void setUserId(UserLogin userId) {
		this.userId = userId;
	}

	/**
	 * Redefining the equality between two TDinBuying objects. 
	 */
	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (!(o instanceof TDinBuying)) {
			return false;
		}
		final TDinBuying tdb = (TDinBuying) o;
		if (name == null) {
			return tdb.name == null;
		}
		else if (!userId.equals(tdb.getUserId()))
			return false;

		return name.equalsIgnoreCase(tdb.name);
	}

	/**
	 * Redefining the hash code of a TDinBuying object.
	 * @return name.hashCode() + userId.hashCode(), the hash code of the object
	 */
	@Override
	public int hashCode() {
		if (name != null) {
			return (name.hashCode() + userId.hashCode());
		}
		return 0;
	}
}
